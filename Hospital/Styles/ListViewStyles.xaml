<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:other="clr-namespace:HospitalIS.Other"
                    >


    <Style x:Key="ListView_MenuStyle" TargetType="ListView">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
          Value="true" />
        <Setter Property="VerticalContentAlignment"
          Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border"
                            BorderThickness="0,0,0,0" 
                            BorderBrush="#1f2942" 
                            Background="{DynamicResource DefaultBlueBrush}">

                        <ScrollViewer>
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource DefaultBlueColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewItem_MenuStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Foreground" Value="{StaticResource DefaultFontBrush}"/>
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="20"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <!-- Trun off default selection-->
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" BorderBrush="{DynamicResource DefaultBlueBrush}" 
                            BorderThickness="0,0,0,0" 
                            Margin="0"
                            Background="{TemplateBinding Background}" 
                            Padding="12" 
                            SnapsToDevicePixels="true"
                            >
                        <Grid>
                            <Grid.ColumnDefinitions >
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Path Name="ImageIcon" 
                                  Data="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem, Mode=FindAncestor}, 
                                   Path=Tag, Converter={other:ImageConverter}}" 
                                  Fill="#b8ceeb" 
                                  Width="17" 
                                  Height="17" 
                                  Stretch="Fill" 
                                  Margin="5"
                                  SnapsToDevicePixels="true">

                            </Path>

                            <ContentPresenter 
                            Grid.Column="1"
                            HorizontalAlignment="Center" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Margin}"
                            />
                        </Grid>


                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsMouseOver}" Value="True"  />
                                <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsSelected}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="B"/>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#15ffffff" Duration="0:0:.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="Transparent" Duration="0:0:.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="A">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#15ffffff" Duration="0:0:0:0.2" />
                                        <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="#c9fdff" Duration="0:0:0:0.2" />

                                        <ColorAnimation Storyboard.TargetName="ImageIcon" 
                                                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" 
                                                        To="#c9fdff" 
                                                        Duration="0:0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="A"/>
                                <BeginStoryboard x:Name="B">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="Transparent" Duration="0:0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>














    <Style x:Key="ListViewItem_MenuStyleWithoutIcon" TargetType="{x:Type ListViewItem}">
        <Setter Property="Foreground" Value="{StaticResource DefaultFontBrush}"/>
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="20"/>

        <Setter Property="Template">
            <Setter.Value>
                <!-- Trun off default selection-->
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" BorderBrush="{DynamicResource DefaultBlueBrush}" 
                            BorderThickness="0,0,0,0" 
                            Margin="0"
                            Background="{TemplateBinding Background}" 
                            Padding="12" 
                            SnapsToDevicePixels="true"
                            >
                        <Grid>
                            <ContentPresenter 
                            Grid.Column="1"
                            HorizontalAlignment="Center" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Margin}"
                            />
                        </Grid>


                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsMouseOver}" Value="True"  />
                                <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsSelected}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="B"/>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#15ffffff" Duration="0:0:.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="Transparent" Duration="0:0:.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="A">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#15ffffff" Duration="0:0:0:0.2" />
                                        <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="#c9fdff" Duration="0:0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="A"/>
                                <BeginStoryboard x:Name="B">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="Transparent" Duration="0:0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>